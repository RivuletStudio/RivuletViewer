{
  "name": "react-dropzone",
  "version": "3.3.2",
  "description": "Simple HTML5 drag-drop zone with React.js",
  "main": "lib/index.js",
  "scripts": {
    "build": "babel ./src --out-dir ./lib",
    "prepublish": "npm run lint && npm test && npm run build",
    "test": "mocha --require ./mocha-environment.js './src/test.js'",
    "lint": "eslint ./src",
    "lint:fix": "eslint --fix ./src",
    "precommit-check": "npm run lint"
  },
  "pre-commit": [
    "precommit-check"
  ],
  "keywords": [
    "react-component",
    "react",
    "drag",
    "drop",
    "upload"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:okonet/react-dropzone.git"
  },
  "bugs": {
    "url": "https://github.com/okonet/react-dropzone/issues"
  },
  "homepage": "https://github.com/okonet/react-dropzone",
  "author": {
    "name": "Param Aggarwal"
  },
  "contributors": [
    {
      "name": "Andrey Okonetchnikov",
      "email": "andrey@okonet.ru",
      "url": "http://okonet.ru"
    },
    {
      "name": "Param Aggarwal"
    }
  ],
  "license": "MIT",
  "peerDependencies": {
    "react": "^0.14.0"
  },
  "dependencies": {
    "attr-accept": "^1.0.3"
  },
  "devDependencies": {
    "babel": "^5.8.29",
    "babel-eslint": "^4.1.6",
    "chai": "^3.4.1",
    "eslint": "^1.10.3",
    "eslint-config-airbnb": "^2.1.1",
    "eslint-plugin-react": "^3.11.3",
    "jsdom": "^7.2.0",
    "mocha": "^2.3.4",
    "pre-commit": "^1.1.2",
    "react": "^0.14.3",
    "react-addons-test-utils": "^0.14.3",
    "react-dom": "^0.14.3",
    "react-testutils-additions": "^0.2.0",
    "sinon": "^1.17.2"
  },
  "readme": "react-dropzone [![Build Status](https://travis-ci.org/okonet/react-dropzone.svg)](https://travis-ci.org/okonet/react-dropzone)\n==============\n\nSimple HTML5 drag-drop zone for files with React.js.\n\nTry it out here: http://okonet.ru/react-dropzone/\n\nInstallation\n============\n\nThe easiest way to use react-dropzone is to install it from npm and include it in your React build process (using [Webpack](http://webpack.github.io/), [Browserify](http://browserify.org/), etc).\n\n```\nnpm install --save react-dropzone\n```\n\nCreate a standalone module using *WebPack*:\n```\n> npm install\n> webpack\n```\n\nReact 0.13 users\n=====\n\nVesion 3.x is not compatible with React 0.13. If you can't upgrade to React 0.14 right now, you should use v 2.x of this package.\n\n```\nnpm install --save react-dropzone@2.x\n```\n\nUsage\n=====\n\nSimply `require('react-dropzone')` and specify an `onDrop` method that accepts an array of dropped files. \n\nBy default, the component picks up some default styling to get you started. You can customize `<Dropzone>` by specifying a `style` and `activeStyle` which is applied when a file is dragged over the zone. You can also specify `className` and `activeClassName` if you would rather style using CSS.\n\nExample\n=====\n\n```jsx\n\n/** @jsx React.DOM */\nvar React = require('react');\nvar Dropzone = require('react-dropzone');\n\nvar DropzoneDemo = React.createClass({\n    onDrop: function (files) {\n      console.log('Received files: ', files);\n    },\n\n    render: function () {\n      return (\n          <div>\n            <Dropzone onDrop={this.onDrop}>\n              <div>Try dropping some files here, or click to select files to upload.</div>\n            </Dropzone>\n          </div>\n      );\n    }\n});\n\nReact.render(<DropzoneDemo />, document.body);\n```\n\nFeatures\n========\n\n- `disableClick` - Clicking the `<Dropzone>` brings up the browser file picker. To disable, set to `true`.\n- `multiple` - To accept only a single file, set this to `false`.\n- `accept` - Filters the file types that are valid. It should have a valid MIME type according to [input element](http://www.w3.org/TR/html-markup/input.file.html), e.g. accept=\"application/pdf\".\n\nTo show a preview of the dropped file while it uploads, use the `file.preview` property. Use `<img src={file.preview} />` to display a preview of the image dropped.\nYou can disable the creation of the preview (for example if you drop big files) by setting the `disablePreview` prop to `true`.\n\nTo trigger the dropzone manually (open the file prompt), call the component's `open` function.\n\n```jsx\n/** @jsx React.DOM */\nvar React = require('react');\nvar Dropzone = require('react-dropzone');\n\nvar DropzoneDemo = React.createClass({\n    getInitialState: function () {\n        return {\n          files: []\n        };\n    },\n\n    onDrop: function (files) {\n      this.setState({\n        files: files\n      });\n    },\n\n    onOpenClick: function () {\n      this.refs.dropzone.open();\n    },\n\n    render: function () {\n        return (\n            <div>\n                <Dropzone ref=\"dropzone\" onDrop={this.onDrop}>\n                    <div>Try dropping some files here, or click to select files to upload.</div>\n                </Dropzone>\n                <button type=\"button\" onClick={this.onOpenClick}>\n                    Open Dropzone\n                </button>\n                {this.state.files.length > 0 ? <div>\n                <h2>Uploading {this.state.files.length} files...</h2>\n                <div>{this.state.files.map((file) => <img src={file.preview} /> )}</div>\n                </div> : null}\n            </div>\n        );\n    }\n});\n\nReact.render(<DropzoneDemo />, document.body);\n```\n\nUploads\n=======\n\nUsing `react-dropzone` is similar to using a file form field, but instead of getting the `files` property from the field, you listen to the `onDrop` callback to handle the files. Simple explanation here: http://abandon.ie/notebook/simple-file-uploads-using-jquery-ajax\n\nSpecifying the `onDrop` method, provides you with an array of [Files](https://developer.mozilla.org/en-US/docs/Web/API/File) which you can then send to a server. For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n\n```javascript\n    onDrop: function(files){\n        var req = request.post('/upload');\n        files.forEach((file)=> {\n            req.attach(file.name, file);\n        });\n        req.end(callback);\n    }\n```\n\nLicense\n=======\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "react-dropzone@3.3.2",
  "_from": "react-dropzone@~3.3.2"
}
